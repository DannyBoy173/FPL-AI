"""
testing the understat scraping
"""
import asyncio
import json
import aiohttp
from pytest import fixture
from understat import Understat

DataSet = [['2016', 'Adrián', ['2016-08-15', '19:00:00'], 'Chelsea'],
['2016', 'Adrián', ['2016-08-15', '19:00:00'], 'Chelsea'],
['2016', 'Adrián', ['2016-08-15', '19:00:00'], 'Chelsea'],
['2016', 'Adrián', ['2016-08-15', '19:00:00'], 'Chelsea'],
['2016', 'Adrián', ['2016-08-15', '19:00:00'], 'Chelsea']]

async def getID(understat, season, name):
    data = await understat.get_league_players("epl", season, player_name = name)
    ID = data[0]["id"] 
    return ID

async def getPlayer(understat, ID, season, date):
    data = await understat.get_player_matches(ID, {"season": str(season), "date": date})
    xG = data[0]["xG"]
    xA = data[0]["xA"]
    return xG, xA

async def getTeam(understat, fixture, season, date):
    data = await understat.get_team_results(fixture, season)
    for game in data:
        USdate = game["datetime"]
        if date in USdate:
            data = game

    home = data["h"]["title"]
    if (home == fixture):
        xGC = data["xG"]["h"]
    else:
        xGC = data["xG"]["a"]
    return xGC

async def main(season, name, dateTime, fixture):
    async with aiohttp.ClientSession() as session:
        success = True
        ID = ['0']
        stats = [('0', '0'), '0']
        understat = Understat(session)
        date = dateTime[0]

        try:
            ID = await asyncio.gather(getID(understat, season, name))
            stats = await asyncio.gather(getPlayer(understat, ID[0], season, date), getTeam(understat, fixture, season, date))
        except:
            success = False

        return ID[0], stats[0][0], stats[0][1], stats[1]

async def getUSdata():
    tasks = []
    for row in DataSet:
        tasks.append(asyncio.ensure_future(main(row[0], row[1], row[2], row[3])))
               
    USdata = await asyncio.gather(*tasks)

    # the dataset and the understat data lists need to be of same length and ordered identically
    while i < len(DataSet):
        i = i + 1
        DataSet[i].extend([USdata[i][0], USdata[i][1], USdata[i][2], USdata[i][3]])     
            

loop = asyncio.get_event_loop()
understatData = loop.run_until_complete(getUSdata())


"""
example of how to use it
# get understat ID of a player name
        # returns an empty list if the name is not found
        data = await understat.get_league_players("epl", 2018, player_name="Paul Pogba")
        print (json.dumps(data))
        print("ID:", data[0]["id"])

        # get xG and xA for a player in a given match
        data = await understat.get_player_matches(1740, {"season": "2018", "date": "2018-09-15"})
        print (json.dumps(data))
        print("xG:", data[0]["xG"])
        print("xA:", data[0]["xA"])

        # get xGC for a team in a given match
        data = await understat.get_team_results("Manchester United", 2018, datetime = "2018-08-10 22:00:00")
        print (json.dumps(data))
        home = data[0]["h"]["title"]

        if (home == "Manchester United"):
            print("xGC:", data[0]["xG"]["a"])
        else:
            print("xGC:", data[0]["xG"]["h"])
"""